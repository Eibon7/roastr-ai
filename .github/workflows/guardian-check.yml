name: Guardian Product Governance Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop

jobs:
  guardian:
    name: Guardian Agent - Protected Domains Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history for diff analysis

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Guardian Product Governance Check
        run: node scripts/guardian-gdd.js --ci
        env:
          CI: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Guardian audit logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: guardian-audit-logs
          path: |
            docs/guardian/audit-log.md
            docs/guardian/cases/*.json
          retention-days: 30

      - name: Comment PR with Guardian results (on failure)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const auditLog = fs.readFileSync('docs/guardian/audit-log.md', 'utf8');
            const lastEntry = auditLog.split('---').slice(-2)[0];

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸš¨ Guardian Product Governance Alert\n\nProtected domain modifications detected. Manual review required.\n\n<details>\n<summary>Guardian Report</summary>\n\n${lastEntry}\n\n</details>\n\n**Action Required:** Please justify changes to protected domains or revert modifications.`
            });
