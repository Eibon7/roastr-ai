name: GDD Telemetry Collection

on:
  # Run daily at 00:00 UTC
  schedule:
    - cron: '0 0 * * *'

  # Manual trigger
  workflow_dispatch:

  # Optional: Run on PR to main (for testing)
  pull_request:
    branches: [main, develop]
    paths:
      - 'docs/nodes/**'
      - 'scripts/collect-gdd-telemetry.js'
      - 'telemetry-config.json'

jobs:
  collect-telemetry:
    runs-on: ubuntu-latest
    name: Collect GDD Telemetry Metrics

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for momentum calculation

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run GDD validation (generate fresh data)
        run: |
          node scripts/validate-gdd-runtime.js --ci || true
          node scripts/score-gdd-health.js --ci || true
          node scripts/predict-gdd-drift.js --ci || true

      - name: Collect telemetry
        id: telemetry
        continue-on-error: ${{ github.event_name == 'pull_request' }}
        run: |
          node scripts/collect-gdd-telemetry.js --ci
          echo "status=$(cat telemetry/snapshots/gdd-metrics-history.json | jq -r '.snapshots[-1].metrics.derived.system_status')" >> $GITHUB_OUTPUT || true

      - name: Commit telemetry data
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(telemetry): Daily GDD metrics snapshot [skip ci]"
          file_pattern: |
            telemetry/snapshots/gdd-metrics-history.json
            telemetry/reports/*.md
          commit_user_name: "gdd-telemetry-bot"
          commit_user_email: "bot@gdd-telemetry.local"
          commit_author: "GDD Telemetry Bot <bot@gdd-telemetry.local>"
          skip_dirty_check: false
          skip_fetch: false
          skip_checkout: false

      - name: Upload telemetry artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gdd-telemetry-${{ github.run_number }}
          path: |
            telemetry/snapshots/gdd-metrics-history.json
            telemetry/reports/*.md
          retention-days: 30

      - name: Check for critical alerts
        if: steps.telemetry.outputs.status == 'CRITICAL'
        run: |
          echo "::warning::GDD system status is CRITICAL"
          exit 1

      - name: Create issue on critical failure
        if: failure() && steps.telemetry.outputs.status == 'CRITICAL'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'telemetry/reports/gdd-telemetry-' + new Date().toISOString().split('T')[0] + '.md';
            const report = fs.readFileSync(reportPath, 'utf8');

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '[GDD Telemetry] System Status: CRITICAL',
              body: `## ðŸš¨ GDD System Status Alert\n\n` +
                    `The GDD telemetry system has detected a **CRITICAL** status.\n\n` +
                    `**Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\n\n` +
                    `---\n\n` +
                    report,
              labels: ['gdd', 'tech-debt', 'priority:P1', 'documentation']
            });

permissions:
  contents: write
  issues: write
  pull-requests: write
