
> roastr-ai@1.0.0 test
> jest --verbose tests/integration/shield-escalation-logic.test.js

  console.log
    [dotenv@17.2.3] injecting env (43) from .env -- tip: 🗂️ backup and recover secrets: https://dotenvx.com/ops

      at _log (node_modules/dotenv/lib/main.js:142:11)

  console.info
    🎭 Mock Mode ENABLED - Using fake data for all external APIs

      at Object.info (tests/setupIntegration.js:49:15)

  console.warn
    [WARN] 2025-10-29T16:22:14.953Z: Aggressive escalation: violation during cooling-off period {
      service: 'ShieldService',
      userId: 'user_cooling_off_test',
      platform: 'twitter',
      originalLevel: 'repeat',
      escalatedTo: 'persistent'
    }

      106 |
      107 |   static warn(message, ...args) {
    > 108 |     console.warn(`[WARN] ${new Date().toISOString()}: ${message}`, ...args);
          |             ^
      109 |   }
      110 |
      111 |   static debug(message, ...args) {

      at Function.warn (src/utils/logger.js:108:13)
      at ShieldService.log (src/services/shieldService.js:1873:20)
      at ShieldService.log [as determineShieldActions] (src/services/shieldService.js:448:12)
      at ShieldService.determineShieldActions [as analyzeForShield] (src/services/shieldService.js:143:40)
      at Object.<anonymous> (tests/integration/shield-escalation-logic.test.js:390:22)

  console.warn
    [WARN] 2025-10-29T16:22:14.959Z: Aggressive escalation: recent violation spike detected {
      service: 'ShieldService',
      userId: 'user_time_windows',
      platform: 'twitter',
      hoursElapsed: '< 1h',
      escalatedTo: 'persistent'
    }

      106 |
      107 |   static warn(message, ...args) {
    > 108 |     console.warn(`[WARN] ${new Date().toISOString()}: ${message}`, ...args);
          |             ^
      109 |   }
      110 |
      111 |   static debug(message, ...args) {

      at Function.warn (src/utils/logger.js:108:13)
      at ShieldService.log (src/services/shieldService.js:1873:20)
      at ShieldService.log [as determineShieldActions] (src/services/shieldService.js:421:12)
      at ShieldService.determineShieldActions [as analyzeForShield] (src/services/shieldService.js:143:40)
      at Object.<anonymous> (tests/integration/shield-escalation-logic.test.js:454:24)

  console.warn
    [WARN] 2025-10-29T16:22:14.973Z: Legal compliance escalation triggered {
      service: 'ShieldService',
      userId: 'user_legal',
      platform: 'discord',
      jurisdiction: 'EU',
      requires_reporting: true
    }

      106 |
      107 |   static warn(message, ...args) {
    > 108 |     console.warn(`[WARN] ${new Date().toISOString()}: ${message}`, ...args);
          |             ^
      109 |   }
      110 |
      111 |   static debug(message, ...args) {

      at Function.warn (src/utils/logger.js:108:13)
      at ShieldService.log (src/services/shieldService.js:1873:20)
      at ShieldService.log [as determineShieldActions] (src/services/shieldService.js:479:12)
      at ShieldService.determineShieldActions [as analyzeForShield] (src/services/shieldService.js:143:40)
      at Object.<anonymous> (tests/integration/shield-escalation-logic.test.js:778:22)

  console.warn
    [WARN] 2025-10-29T16:22:14.983Z: Corrupted user behavior data detected, using safe defaults {
      service: 'ShieldService',
      userId: 'user_corrupted',
      platform: 'twitter',
      originalViolations: 0,
      fallbackSeverity: 'low',
      fallbackViolations: 0
    }

      106 |
      107 |   static warn(message, ...args) {
    > 108 |     console.warn(`[WARN] ${new Date().toISOString()}: ${message}`, ...args);
          |             ^
      109 |   }
      110 |
      111 |   static debug(message, ...args) {

      at Function.warn (src/utils/logger.js:108:13)
      at ShieldService.log (src/services/shieldService.js:1873:20)
      at ShieldService.log [as determineShieldActions] (src/services/shieldService.js:356:12)
      at ShieldService.determineShieldActions [as analyzeForShield] (src/services/shieldService.js:143:40)
      at Object.<anonymous> (tests/integration/shield-escalation-logic.test.js:901:22)

PASS integration-tests tests/integration/shield-escalation-logic.test.js
  Shield Escalation Logic Tests - Issue #408
    Escalation Matrix Validation
      ✓ should follow escalation path: warn → mute_temp → mute_permanent → block → report (17 ms)
      ✓ should handle severity-based immediate escalation for critical content (3 ms)
      ✓ should apply escalation based on violation frequency within time windows (1 ms)
    Time-Based Escalation Logic
      ✓ should apply time decay for old violations in escalation calculations (1 ms)
      ✓ should escalate faster for violations within cooling-off period (6 ms)
      ✓ should handle escalation windows correctly across different time periods (4 ms)
    Cross-Platform Escalation Tracking
      ✓ should aggregate violations across platforms for escalation decisions (3 ms)
      ✓ should handle platform-specific escalation policies (2 ms)
    Configuration-Based Escalation Rules
      ✓ should respect organization-specific escalation configurations (2 ms)
      ✓ should handle escalation rule exceptions for special user types (1 ms)
    Emergency Escalation Procedures
      ✓ should trigger emergency escalation for imminent threats (2 ms)
      ✓ should bypass normal escalation for legal compliance requirements (4 ms)
    Escalation Performance and Edge Cases
      ✓ should handle concurrent escalation decisions without race conditions (6 ms)
      ✓ should handle escalation with missing or corrupted behavior data (3 ms)
      ✓ should complete escalation analysis within performance thresholds (2 ms)

Test Suites: 1 passed, 1 total
Tests:       15 passed, 15 total
Snapshots:   0 total
Time:        1.393 s
Ran all test suites matching tests/integration/shield-escalation-logic.test.js.
